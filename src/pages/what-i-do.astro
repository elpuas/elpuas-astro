---
import BaseLayout from '../layouts/BaseLayout.astro'
import Heading from '../components/Heading.astro'
import { WHAT_QUERY } from '../queries/page-what-i-do';
import { fetchGraphQL } from '../utils/fetch-graphql';
import { StructuredText } from '@datocms/astro/StructuredText';
import Gallery from '../components/Gallery.astro';
import { Image } from '@datocms/astro/Image';
import VideoHero from '../components/VideoHero.astro';
import SelectedFeaturedCards from '../components/SelectedFeaturedCards.astro';
// import { Debug } from 'astro:components';

const response = await fetchGraphQL(WHAT_QUERY);

if (!response || !response.page) {
	throw new Error('Failed to fetch page data or no page data returned');
}

const page = response.page;

// Extracting metadata from _seoMetaTags
const seoMetaTags = page._seoMetaTags;
const titleTag = seoMetaTags?.find(tag => tag.attributes?.property === 'og:title' || tag.attributes?.name === 'twitter:title');
const descriptionTag = seoMetaTags?.find(tag => tag.attributes?.property === 'og:description' || tag.attributes?.name === 'twitter:description');
const imageTag = seoMetaTags?.find(tag => tag.attributes?.property === 'og:image' || tag.attributes?.name === 'twitter:image');
const metaTitle = titleTag ? titleTag.attributes.content : page.title;
const metaDescription = descriptionTag ? descriptionTag.attributes.content : 'I’m passionate about helping people create and build great digital products. I’ve been designing and developing software for fifteen years, and I’m a big supporter of the startup and tech community.';
const metaImage = imageTag ? imageTag.attributes.content : null;


---
<BaseLayout title={metaTitle} description={metaDescription} image={metaImage}>
	<div class="spacer"></div>
	<Heading level="h1">What I Do.</Heading>
	<Heading level="h5">To understand what I do, let me share a story with you. It’s a story about how a love for drawing turned into  web development, and how every step along the way has shaped the work I do today.</Heading>
	<section class="page-content">
		{page.content.map(block => {
			switch (block._modelApiKey) {
			case 'block_paragraph':
				return <StructuredText data={block.content.value} />;
			case 'block_image':
				return <Image data={block.image.responsiveImage} />;
			case 'block_gallery':
				return <Gallery images={block.images} />;
			case 'block_video_hero':
				return (
					<VideoHero
						videoUrl={block.videoUrl}
						heading={block.callout[0].heading.value.document.children[0].children[0].value}
						content={block.callout[0].content.value.document.children[0].children[0].value}
					/>
				);
			case 'block_text_and_image':
				return (
					<div class="text-and-image">
						<StructuredText data={block.content.value} />
						{/* <Image data={block.image.responsiveImage} /> */}
					</div>
				);
			case 'block_selected_articles_hero':
				return (
					<SelectedFeaturedCards
						headline={block.callout[0].heading.value}
						content={block.callout[0].content.value}
						linkText='Read More'
						linkUrl='/blog'
						articles={block.articles}
					/>
				);
			default:
				return <StructuredText data={block.content.value} />;
			}
		})}
	</section>
</BaseLayout>

<style>
	.page-content {
		.text-and-image {
			display: grid;
			grid-template-columns: 1fr;
			gap: 2rem;
			align-items: center;
			justify-content: center;
			margin-top: var(--elpuas-preset-space-xxxl);

			h2 {
				line-height: 0;
				margin-bottom: var(--elpuas-preset-space-lg);
				strong {
					font-size: var(--elpuas-preset-fontsize-h3);
					line-height: 1.25;
					letter-spacing: -0.08rem;
				}	
			}

			img {
				border-radius: 9999px;
				height: 400px !important;
			}
		}
	}
</style>