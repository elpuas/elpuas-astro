---
import Heading from './Heading.astro'
import Button from './Button.astro'

export interface Props {
	heading: string
	content: string
	videoUrl: string
	postUrl?: string
}

const { heading, content, videoUrl, postUrl } = Astro.props

const toNoCookie = (url: string, start = 0): string => {
	const u = new URL(url)
	let id = ''

	if (u.hostname.includes('youtu.be')) {
		id = u.pathname.slice(1)
	} else if (u.pathname.startsWith('/embed/')) {
		id = u.pathname.split('/embed/')[1]
	} else if (u.searchParams.has('v')) {
		id = u.searchParams.get('v') ?? ''
	}

	const t =
		u.searchParams.get('t') ??
		u.searchParams.get('start') ??
		String(start)

	if (!id) return url.replace('www.youtube.com', 'www.youtube-nocookie.com')

	const qs = new URLSearchParams({
		rel: '0',
		modestbranding: '1',
		playsinline: '1',
		start: String(Number(t) || 0)
	})

	return `https://www.youtube-nocookie.com/embed/${id}?${qs.toString()}`
}

const embedSrc = toNoCookie(videoUrl)
---

<div class="video-hero">
	<div class="text-content">
		<Heading level="h3" className="heading-video-hero">{heading}</Heading>
		<p>{content}</p>
		<Button label="Learn More" href={postUrl} className="secondary" />
	</div>

	<div class="video-content" role="group" aria-label={heading}>
		<iframe
			title={heading}
			src={embedSrc}
			loading="lazy"
			allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
			allowfullscreen
			referrerpolicy="strict-origin-when-cross-origin"
		></iframe>
	</div><!-- video-content -->
</div><!-- video-hero -->

<style>
	.video-hero {
		container-type: inline-size;
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		gap: 20px;
	}

	.video-hero .text-content {
		flex: 1;
		max-width: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
	}

	.video-hero .text-content p {
		margin-bottom: 0;
	}

	.video-hero .text-content .heading-video-hero {
		margin-bottom: var(--elpuas-preset-space-sm);
		letter-spacing: -0.8px;
	}

	.video-hero .video-content {
		flex: 1;
		max-width: 100%;
		width: 100%;
		aspect-ratio: 16 / 9;
		position: relative;
	}

	.video-hero iframe {
		position: absolute;
		inset: 0;
		width: 100%;
		height: 100%;
		border: 0;
		border-radius: 4px;
		box-shadow: inset 0 0 0 1px var(--elpuas-preset-color-tertiary);
	}

	@container (min-width: 900px) {
		.video-hero .text-content { max-width: 50%; }
		.video-hero .video-content { max-width: 50%; }
	}

	@media screen and (min-width: 900px) {
		.video-hero { flex-direction: row; }
	}
</style>