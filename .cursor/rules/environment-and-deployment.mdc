---
description: 
globs: 
alwaysApply: true
---
---
title: "Environment Configuration and Deployment"
summary: "Environment variables, API key management, build processes, and deployment patterns for the DatoCMS + Astro setup"
---

# Description
This project requires proper environment configuration for DatoCMS API access, build-time data fetching, and deployment to production. Environment variables must be configured correctly for both development and production environments.

# Guidelines
- **API Keys**: Store DatoCMS API token in `DATOCMS_API_KEY` environment variable
- **Build Process**: Content is fetched at build time, not runtime, ensuring static generation
- **Environment Files**: Use `.env` files for local development, configure deployment platform variables separately
- **Error Handling**: Implement proper error handling for API failures during build
- **Caching**: Leverage Astro's build caching and DatoCMS's CDN for optimal performance
- **Deployment**: Configure build commands to handle DatoCMS data fetching during CI/CD

# Examples

## Environment Variable Setup
```bash
# .env (local development)
DATOCMS_API_KEY=your_datocms_api_token_here
```

## Build-time Data Fetching
```javascript
// All DatoCMS calls happen at build time
export async function getStaticPaths() {
    const response = await fetch('https://graphql.datocms.com/', {
        headers: {
            'Authorization': `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
        },
        // ... rest of fetch configuration
    });
    
    if (!response.ok) {
        throw new Error('Failed to fetch data from DatoCMS during build');
    }
    
    return paths;
}
```

## Error Handling Pattern
```javascript
const response = await fetchGraphQL(ARTICLES_QUERY);

if (!response || !response.allArticles) {
    throw new Error('Failed to fetch articles or no articles returned');
}
```

## Netlify Deployment Configuration
```toml
# netlify.toml
[build]
  command = "npm run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "18"
```

# Related
- `astro.config.mjs` - Astro configuration with site URL
- `/src/utils/fetch-graphql.js` - API utility with environment variable usage
- Netlify deployment status badge in README
- Build and preview scripts in `package.json`
